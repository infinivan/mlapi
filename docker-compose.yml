version: "3.5"

services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    restart: on-failure
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - traefik.enable=true
      # Define the port inside of the Docker service to use
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.traefik-dashboard-http.entrypoints=web
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.horizonfiber.net`)
      # Use the traefik-public network (declared below)
      #- traefik.docker.network=traefik-public
      # traefik-https the actual router using HTTPS
      - traefik.http.routers.traefik-dashboard-https.entrypoints=websecure
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.horizonfiber.net`)
      - traefik.http.routers.traefik-dashboard-https.tls=true
      # Use the "le" (Let's Encrypt) resolver created below
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=myresolver
      # Use the special Traefik service api@internal with the web UI/Dashboard
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      # https-redirect middleware to redirect HTTP to HTTPS
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # traefik-http set up only to use the middleware to redirect to https
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
      # admin-auth middleware with HTTP Basic auth
      # Using the environment variables USERNAME and HASHED_PASSWORD
      - traefik.http.middlewares.admin-auth.basicauth.users=traefik:$$apr1$$cIc2751d$$HejlZ4u/fLP1JrVO6sJO1/
      # Enable HTTP Basic auth, using the middleware created above
      - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
    command:
      # default ping entrypoint is http 8080
      - "--ping=true"
      #- "--ping.entryPoint=web"
      - "--accesslog=true"
      - "--accesslog.filters.statuscodes=300-599"
      - "--accesslog.filters.retryattempts"
      - "--accesslog.filters.minduration=10ms"
      - "--log.level=INFO"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=hasakura@infinivan.com"
      #chmod 600 or will not read
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000"

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    healthcheck:
      test: wget --quiet --tries=1 --spider http://ping.127.0.0.1.nip.io:8080/ping || exit 1
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s

  whoami:
    depends_on:
      - traefik
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`one.horizonfiber.net`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"

  whoami2:
    depends_on:
      - traefik
    image: "traefik/whoami"
    container_name: "simple-service2"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami2.rule=Host(`two.horizonfiber.net`)"
      - "traefik.http.routers.whoami2.entrypoints=websecure"
      - "traefik.http.routers.whoami2.tls.certresolver=myresolver"

  whoami3:
    depends_on:
      - traefik
    image: "traefik/whoami"
    container_name: "simple-service3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami3.rule=Host(`three.horizonfiber.net`)"
      - "traefik.http.routers.whoami3.entrypoints=websecure"
      - "traefik.http.routers.whoami3.tls.certresolver=myresolver"

  mlapi:
    depends_on:
      - traefik
    #stdin_open: true
    build:
      dockerfile: Dockerfile
      context: ./app
    volumes:
      #- /usr/local/lib
      - ./app:/app
    container_name: "mlapi"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlapi.rule=Host(`med.horizonfiber.net`)"
      - "traefik.http.routers.mlapi.entrypoints=websecure"
      - "traefik.http.routers.mlapi.tls.certresolver=myresolver"
      - "traefik.http.services.mlapi.loadbalancer.server.port=80"

  prometheus:
    image: prom/prometheus:v2.22.1
    container_name: "prometheus"
    depends_on:
      - traefik
    ports:
      # Exposes port 9090 for grafana
      - "9090:9090"
    #networks:
    #  - inbound
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prom.horizonfiber.net`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      #- "traefik.docker.network=traefik"

  grafana:
    image: grafana/grafana:7.3.1
    container_name: "grafana"
    #networks:
    #  - inbound
    depends_on:
      - prometheus
      - traefik
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    user: "104"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`graf.horizonfiber.net`)"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      #- "traefik.docker.network=inbound"

volumes:
  prometheus_data: {}
  grafana_data: {}
